EndPoint Para A Localização
    GET localizacao - Retornar invalido, e preciso umas das querys
        GET localizacao?exame=[nome exame]
        GET localizacao?setor=[nome setor]
        GET localizacao?bloco=[nome do bloco]
        GET localizacao?vaga=[vaga id || vaga nome]
        GET localizacao?noticia=[noticia id || noticia nome]
    --- ADMIN

    POST /setores
    PATCH /setores/:id
    DELETE /setores/:id

    Interfaces
        LocalizacaoResponse {
            existe: boolean,
            nome?: string,
            exame?: string,
            setor?: string,
            bloco?: string,
            andar: string;
            coordenada?: string,
            referencias?: Object<Array<string>>,
        }

        Exemplo Retorno:
            LocalizacaoResponse
            {
                existe: "true",
                exame?: "Exame de Sangue",
                setor?: "Consultorio Particular",
                bloco?: "Bloco 3",
                coordenada?: "213123--daa-1-31-3-a-",
                referencias?: {
                    Bloco: ["Perto do lago"],
                    Setor: ["tem um placa grande dizendo 'Consultorio' "]
                },
            }

EndPoint Para Os Eventos
    GET /eventos - Todos Eventos [Futuros e em andamentos]
        GET /eventos?status=["futuros", "em_andamento", "encerrado"] - Pega eventos que vão acontecer, que estão acontecendo ou que ecerraram
        GET /eventos?dias=[numero de dias até o evento] - Pega enventos de acordo com dias faltando, ex: um evento que esta para acontecer em 3 dias
    GET /eventos/:id - Pegar evento por ID

    --- ADMIN

    POST /eventos
    PATCH /eventos/:id
    DELETE /eventos/:id


    Interface evento {
        id: number;
        titulo: string;
        descricao: string;
        data_inicio: string;
        data_fim: string;
        status: "futuro" | "em_andamento" | "encerrado";
        local: {
          nome: string;
          bloco: string;
          setor: string;
          andar: string;
          coordenada?: string;
          referencias?: Object<Array<string>> - [links para imagens], [textos para referencias, descrições];
        };
        coordenada: string;
        referencias: string[];
        publico_alvo?: string;
    }

EndPoint Para As Noticias
    GET /noticias - Pegar Todas, ultimos 30 dias
        GET /noticias?recentes=[numero de até qual dia] - Pegar noticias recentes até um certo dia, ex: recentes=7, noticias recentes  ultimos 7 dias
        GET /noticias?bloco=[nome do bloco] - Pegar noticia relacionado ao bloco
        GET /noticias?setor=[nome do setor] - Pegar noticia relacionado ao setor
        GET /noticias?exame=[nome do exame] - Pegar noticia relacionado ao exame
    GET /noticias/:id - Pegar noticias por ID

    --- ADMIN

    POST /noticias
    PATCH /noticias/:id
    DELETE /noticias/:id

    Interface
        interface Noticia {
            id: number;
            titulo: string;
            resumo: string;
            conteudo: string;
            data_publicacao: string;
            local?: {
                nome: string;
                bloco: string;
                setor: string;
                andar: string;
                coordenada?: string;
                referencias?: Object<Array<string>> - [links para imagens], [textos para referencias, descrições];
            };
            imagens?: string[];
            tags?: string[];
        }

EndPoint Sobre
    GET /sobre - Pegar Sobre da Fundação

    -- ADMIN
    PATCH /sobre

    Interface sobre {
        complience: string,
        missao: string,
        visao: string,
        valores: string,

        completo: string, - complience + missao + visao + valores
    }

EndPoint Para Vagas de emprego
    GET /vagas - Pegar todos as vagas ativas
        GET /vagas?encerradas - pegar vagas antigas ja encerradas
        GET /vagas?cargo=[nome do cargo] - Pegar vagas de acordo com o cargo
        GET /vagas?contrato=[CLT || Estagio || PJ] - Pegar vagas por contrato
        GET /vagas?data_publicacao - Pegar vagas por data
    GET /vagas/:id - Pegar vaga especifica

    -- ADMINS

    POST /vagas
    PATCH /vagas/:id
    DELETE /vagas/:id

    interface Vaga {
        id: number;
        cargo: string;
        resumo: string;
        descricao: string;
        requisitos: string[];
        data_publicacao: string;
        data_encerramento?: string;
        status: "ativa" | "encerrada";
        como_se_inscrever: string;
        contrato: string; - "CLT, ESTAGIO, etc..";
        local: {
          nome: string;
          bloco: string;
          setor: string;
          andar: string;
          coordenada?: string;
          referencias?: Object<Array<string>> - [links para imagens], [textos para referencias, descrições];
        };
    }
